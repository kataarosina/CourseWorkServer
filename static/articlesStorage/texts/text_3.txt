Как Вы уже знаете, инкапсуляция - это механизм объединения всех данных в некоторую оболочку с возможностью сокрытия реализации внутренней логики.
<br>С объединением всех атрибутов и методов в одну оболочку все понятно - а как быть с сокрытием реализации?
<br>Здесь появилось такое понятие, как модификаторы доступа. Говоря простым языком, это - ключевые слова, которые ставятся перед атрибутами и методами для обозначения таких их свойств, как доступ извне класса, доступ из классов-потомков.
<br>По порядку: для возможности доступа к полю/методу класса извне его необходимо для поля прописать слово public.
<br>Для возможности обращаться к свойству класса только внутри самого класса и внутри его наследников, необходимо использовать слово protected.
<br>И, наконец, для полного сокрытия свойства отовсюду, кроме самого класса, необходимо использовать слово private.
<br>Выглядит такая конструкция примерно следующим образом:
<br><div style="text-align: center; margin-top: 5px; margin-bottom: 5px"><img src="../../static/articlesStorage/images/article_3_0.jpeg" style="width: 50%"></div>
<br>В этом случае поле $name - наследуемое, но обращаться к нему можно только внутри методов класса; $kind - ненаследуемое и обращаться к нему можно только изнутри класса; sound() - наследуемое, и обращаться можно извне класса.